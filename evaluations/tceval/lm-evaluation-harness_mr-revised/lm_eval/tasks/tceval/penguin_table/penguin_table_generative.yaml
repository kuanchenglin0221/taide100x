dataset_path: MediaTek-Research/TCEval-v2
dataset_name: penguin_table
task: penguin_table_generative
test_split: test
fewshot_split: dev
fewshot_config:
  sampler: first_n
description: "Answer questions about a table of penguins and their attributes. Select from option A-E. Return the answer in double bracket, e.g., [[Z]]\n\n"
doc_to_text: "{{question.strip()}}\nA. {{A}}\nB. {{B}}\nC. {{C}}\nD. {{D}}\nE. {{E}}\nAnswer:"
doc_to_choice: "{'A': 'A', 'B': 'B', 'C': 'C', 'D': 'D', 'E': 'E'}"
doc_to_target: answer
output_type: generate_until
filter_list:
  - name: "get-answer"
    filter:
      - function: "regex_findall"
        regex_pattern: "^\\s*\\[\\[([A-Ea-e])\\]\\]|^\\s*\\b([A-Ea-e])\\.\\s"
      - function: "take_first"
metric_list:
  - metric: exact_match
    aggregation: mean
    higher_is_better: true
    # ignore_case: true
    # ignore_punctuation: true
generation_kwargs:
  until:
    - "</s>"
    - "Q:"
    - "\n\n"
  do_sample: false
  temperature: 0.0
num_fewshot: 0
metadata:
  version: 0.0
# doc_to_choice: ["A", "B", "C", "D", "E"] 
# output_type: multiple_choice
# doc_to_text: "{{question.strip()}}\nA. {{A}}\nB. {{B}}\nC. {{C}}\nD. {{D}}\nE. {{E}}\nAnswer:"
# doc_to_choice: ["A", "B", "C", "D", "E"]
# doc_to_target: answer
# metric_list:
#   - metric: acc
#     aggregation: mean
#     higher_is_better: true

# description: "Answer questions about a table of penguins and their attributes.\n\n"
# doc_to_text: "Q: {{input}}\nA:"
# doc_to_target: "{{target}}"

